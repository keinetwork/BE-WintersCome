## 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8


# 데이터 소스 설정
spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost/~/test
    username: sa
    password:

# JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl #테이블의 컬럼이름과 클래스의 변수 이름을 매핑해준다.
      ddl-auto: create-drop
      use-new-id-generator-mappings: false # id key 생성 알고리즘
    properties:
      hibernate:
        format_sql]: true # sql 라인이 자동 정렬
        highlight_sql: true # 쿼리 색깔
        use_sql_comments: true
    defer-datasource-initialization: true # schema.sql
  sql.init.mode: always # schema.sql

# 타임리프 설정
  thymeleaf:
    prefix: classpath:templates/html/
    check-template-location: true
    suffix: .html
    mode: HTML
    cache: false
    enabled: true


# Swagger springdoc-ui Configuration
springdoc:
  packages-to-scan: com.winters.be
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: demo-ui.html            # Swagger UI 경로 => localhost:8000/demo-ui.html
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    enabled: true
#    display-request-duration: true
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
    enabled: true
  cache:
    disabled: true

#logging
log4j:
  logger:
    org.hibernate.SQL: debug  # just SQL

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace #JDBC bind parameters
